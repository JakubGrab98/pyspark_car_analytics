version: '3.8'


services:
  spark-master:
    container_name: da-spark-master
    build: .
    image: da-spark-image
    entrypoint: ['./entrypoint.sh', 'master']
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080"]
      interval: 5s
      timeout: 3s
      retries: 3
    volumes:
      - ./data:/opt/spark/data
      - ./:/opt/spark/apps
      - spark-logs:/opt/spark/spark-events
    env_file:
      - .env.spark
    environment:
      - SPARK_MASTER_HOST=da-spark-master
      - SPARK_MASTER_PORT=7077
      - SPARK_LOG_DIR=/opt/spark/spark-events
      - SPARK_WORKER_WEBUI_PORT=8081
    ports:
      - '9090:8080'  # Master Web UI
      - '7077:7077'  # Spark Master port
    networks:
      - spark-network

  spark-history-server:
    container_name: da-spark-history
    image: da-spark-image
    entrypoint: ['./entrypoint.sh', 'history']
    depends_on:
      - spark-master
    env_file:
      - .env.spark
    environment:
      - SPARK_HISTORY_OPTS=-spark.history.fs.logDirectory=/opt/spark/spark-events
      - SPARK_HISTORY_UI_PORT=18080
    volumes:
      - spark-logs:/opt/spark/spark-events
    ports:
      - '18080:18080'  # History Server UI
    networks:
      - spark-network

  spark-worker:
    image: da-spark-image
    entrypoint: ['./entrypoint.sh', 'worker']
    depends_on:
      - spark-master
    env_file:
      - .env.spark
    environment:
      - SPARK_MASTER=spark://da-spark-master:7077
      - SPARK_WORKER_CORES=2
      - SPARK_WORKER_MEMORY=4g
      - SPARK_WORKER_DIR=/opt/spark/work
      - SPARK_WORKER_WEBUI_PORT=8081
    volumes:
      - ./data:/opt/spark/data
      - ./:/opt/spark/apps
      - spark-logs:/opt/spark/spark-events
    networks:
      - spark-network

  minio1:
    image: docker.io/bitnami/minio:2024
    ports:
      - 9000:9000
      - 9001:9001
    volumes:
      - 'minio_1_data:/bitnami/minio/data'
    environment:
      - MINIO_ROOT_USER=minio
      - MINIO_ROOT_PASSWORD=miniosecret
      - MINIO_DISTRIBUTED_MODE_ENABLED=yes
      - MINIO_DISTRIBUTED_NODES=minio1,minio2,minio3,minio4
  minio2:
    image: docker.io/bitnami/minio:2024
    volumes:
      - 'minio_2_data:/bitnami/minio/data'
    environment:
      - MINIO_ROOT_USER=minio
      - MINIO_ROOT_PASSWORD=miniosecret
      - MINIO_DISTRIBUTED_MODE_ENABLED=yes
      - MINIO_DISTRIBUTED_NODES=minio1,minio2,minio3,minio4
  minio3:
    image: docker.io/bitnami/minio:2024
    volumes:
      - 'minio_3_data:/bitnami/minio/data'
    environment:
      - MINIO_ROOT_USER=minio
      - MINIO_ROOT_PASSWORD=miniosecret
      - MINIO_DISTRIBUTED_MODE_ENABLED=yes
      - MINIO_DISTRIBUTED_NODES=minio1,minio2,minio3,minio4
  minio4:
    image: docker.io/bitnami/minio:2024
    volumes:
      - 'minio_4_data:/bitnami/minio/data'
    environment:
      - MINIO_ROOT_USER=minio
      - MINIO_ROOT_PASSWORD=miniosecret
      - MINIO_DISTRIBUTED_MODE_ENABLED=yes
      - MINIO_DISTRIBUTED_NODES=minio1,minio2,minio3,minio4

volumes:
  spark-logs:
  minio_1_data:
    driver: local
  minio_2_data:
    driver: local
  minio_3_data:
    driver: local
  minio_4_data:
    driver: local

networks:
  spark-network:
    driver: bridge
